import "@typespec/http";
import "@typespec/rest";
import "@typespec/openapi3";

using Http;

@service({
  title: "Todo App",
})
@useAuth(BearerAuth)
namespace Todo;

model User {
  /** An autogenerated unique id for the user */
  @key
  @visibility("read")
  id: safeint;

  /** The user's username */
  @maxLength(50)
  username: string;

  /** The user's email address */
  @format("email")
  email: string;

  /**
   * The user's password, provided when creating a user
   * but is otherwise not visible (and hashed by the backend)
   */
  @visibility("create")
  password: string;
}

model TodoItem {
  /** The item's unique id */
  @key id: safeint;

  /** The item's title */
  @maxLength(255)
  title: string;

  /** User that created the todo */
  @visibility("read") createdBy: User.id;

  /** User that the todo is assigned to */
  ownedBy: User.id;

  /** A longer description of the todo item in markdown format */
  description: string;

  /** The status of the todo item */
  status: TodoItemStatus;

  /** When the todo item was created. */
  @visibility("read") createdAt: utcDateTime;

  /** When the todo item was last updated */
  @visibility("read") updatedAt: utcDateTime;

  /** When the todo item was makred as completed */
  @visibility("read") completedAt: utcDateTime;
}

union TodoAttachment {
  file: TodoFileAttachment,
  url: TodoUrlAttachment,
}

model TodoUrlAttachment {
  /** A description of the URL */
  description: string;

  /** The url */
  url: url;
}

model TodoFileAttachment {
  /** The todo item this is attached to */
  todoItemId: TodoItem.id;

  /** The file name of the attachment */
  @maxLength(255)
  filename: string;

  /** The media type of the attachment */
  mediaType: string;

  /** The url where the attachment can be downloaded from */
  url: url;
}

enum TodoItemStatus {
  NotStarted,
  InProgress,
  Completed,
}

@error
model Error {
  /** A machine readable error code */
  code: string;

  /** A human readable message */
  message: string;
}

namespace Users {
  // would prefer to extend
  // https://github.com/microsoft/typespec/issues/2922

  model UserCreatedResponse {
    ...User;
    ...OkResponse;

    /** The token to use to construct the validate email address url */
    token: string;
  }

  /** The user already exists */
  model UserExistsResponse extends Error {
    ...ConflictResponse;
  }

  /** The user is invalid (e.g. forgot to enter email address) */
  model InvalidUserResponse extends Error {
    @statusCode statusCode: 422;
  }

  @route("/users")
  @post
  op create(
    user: User,
  ): UserCreatedResponse | UserExistsResponse | InvalidUserResponse;

  @route("validate")
  @get
  op validate(@query token: string): OkResponse | InvalidUserResponse;

  @route("login")
  @post
  op login(
    username: User.username,
    password: User.password,
  ): OkResponse | UnauthorizedResponse;

  @route("logout")
  @get
  op logout(): OkResponse;

  /** Sends a reset token to the user's email address */
  @route("forgot-password")
  @post
  op forgotPassword(email: User.email): OkResponse | NotFoundResponse;

  @route("reset-password")
  @get
  op resetPassword(@query resetToken: string): OkResponse | NotFoundResponse;
}

@route("items")
namespace TodoItems {
  model PaginationControls {
    /** The limit to the number of items */
    @query limit: int32 = 50;

    /** The offset to start paginating at */
    @query offset: int32 = 0;
  }

  model TodoPage {
    /** The items in the page */
    items: TodoItem[];

    /** The number of items returned in this page */
    pageSize: int32;

    /** The total number of items */
    totalSize: int32;

    ...PaginationControls;

    /** A link to the previous page, if it exists */
    prevLink?: url;

    /** A link to the next page, if it exists */
    nextLink?: url;
  }

  // deeply annoying that I have to copy/paste this...
  model TodoItemPatch {
    /** The item's title */
    title?: TodoItem.title;

    /** User that the todo is assigned to */
    ownedBy?: TodoItem.ownedBy;

    /** A longer description of the todo item in markdown format */
    description?: TodoItem.description;

    /** The status of the todo item */
    status?: TodoItemStatus;
  }

  model InvalidTodoItem extends Error {
    @statusCode statusCode: 422;
  }

  @list op list(...PaginationControls): TodoPage;
  @post op create(
    @header contentType: "multipart/form-data" | "application/json",
    item: TodoItem,
    attachments: TodoAttachment[],
  ): TodoItem | InvalidTodoItem;

  @get op get(@path id: TodoItem.id): TodoItem | NotFoundResponse;
  @patch op update(@path id: TodoItem.id, patch: TodoItemPatch): TodoItem;
  @delete op delete(@path id: TodoItem.id): OkResponse | NotFoundResponse;

  @route("{itemId}/attachments")
  namespace Attachments {
    @list op list(
      @path itemId: TodoItem.id,
    ): TodoAttachment[] | NotFoundResponse;

    // OpenAPI uses this signature, but I really wish it wouldn't.
    // The intent is that you can only upload file attachments with MFD
    // and url attachments with JSON.
    @post op create(
      @header contentType: "multipart/form-data" | "application/json",
      @path itemId: TodoItem.id,
      contents: bytes | TodoUrlAttachment,
    ): OkResponse | NotFoundResponse;

    @overload(create)
    @post
    op createUrlAttachment(
      @header contentType: "application/json",
      @path itemId: TodoItem.id,
      contents: TodoUrlAttachment,
    ): OkResponse | NotFoundResponse;

    @overload(create)
    @post
    op createFileAttachment(
      @header contentType: "multipart/form-data",
      @path itemId: TodoItem.id,
      contents: bytes,
    ): OkResponse | NotFoundResponse;

    @delete op delete(@path itemId: TodoItem.id): OkResponse | NotFoundResponse;
  }
}
